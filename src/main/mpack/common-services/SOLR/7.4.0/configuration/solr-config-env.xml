<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration supports_final="false" supports_adding_forbidden="true">

    <property>
        <name>solr_stop_wait</name>
        <value>180</value>
        <description>This controls the number of seconds that the solr script will wait for Solr to stop gracefully
            or Solr to start. If the graceful stop fails, the script will forcibly stop Solr. If the start fails,
            the script will give up waiting and display the last few lines of the logfile.
        </description>
        <value-attributes>
            <type>int</type>
        </value-attributes>
        <display-name>Solr stop wait</display-name>
    </property>


    <!-- solr.in.sh -->
    <property>
        <name>solr_in_sh_template</name>
        <display-name>solr.in.sh template</display-name>
        <description>This is a template for the solr.in.sh file</description>
        <value>
            # Licensed to the Apache Software Foundation (ASF) under one or more
            # contributor license agreements.  See the NOTICE file distributed with
            # this work for additional information regarding copyright ownership.
            # The ASF licenses this file to You under the Apache License, Version 2.0
            # (the "License"); you may not use this file except in compliance with
            # the License.  You may obtain a copy of the License at
            #
            #     http://www.apache.org/licenses/LICENSE-2.0
            #
            # Unless required by applicable law or agreed to in writing, software
            # distributed under the License is distributed on an "AS IS" BASIS,
            # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            # See the License for the specific language governing permissions and
            # limitations under the License.

            # Settings here will override settings in existing env vars or in bin/solr.  The default shipped state
            # of this file is completely commented.

            # By default the script will use JAVA_HOME to determine which java
            # to use, but you can set a specific path for Solr to use without
            # affecting other Java applications on your server/workstation.
            SOLR_JAVA_HOME={{java64_home}}

            # This controls the number of seconds that the solr script will wait for
            # Solr to stop gracefully or Solr to start.  If the graceful stop fails,
            # the script will forcibly stop Solr.  If the start fails, the script will
            # give up waiting and display the last few lines of the logfile.
            SOLR_STOP_WAIT="{{solr_stop_wait}}"

            # The keyword to be used when stopping Solr via Jetty's STOP.PORT functionality
            STOP_KEY={{solr_stop_key}}

            # Increase Java Heap as needed to support your indexing / query needs
            SOLR_HEAP="{{solr_config_memory}}"

            # Expert: If you want finer control over memory options, specify them directly
            # Comment out SOLR_HEAP if you are using this though, that takes precedence
            #SOLR_JAVA_MEM="-Xms512m -Xmx512m"

            # Enable verbose GC logging...
            #  * If this is unset, various default options will be selected depending on which JVM version is in use
            #  * For Java 8: if this is set, additional params will be added to specify the log file and rotation
            #  * For Java 9 or higher: each included opt param that starts with '-Xlog:gc', but does not include an
            #    output specifier, will have a 'file' output specifier (as well as formatting and rollover options)
            #    appended, using the effective value of the SOLR_LOGS_DIR.
            #
            #GC_LOG_OPTS='-Xlog:gc*'  # (Java 9+)
            #GC_LOG_OPTS="-verbose:gc -XX:+PrintHeapAtGC -XX:+PrintGCDetails \
            #  -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime"

            # These GC settings have shown to work well for a number of common Solr workloads
            {{solr_hdfs_prefix}}GC_TUNE="$GC_TUNE -XX:MaxDirectMemorySize=20g -XX:+UseLargePages"

            # Set the ZooKeeper connection string if using an external ZooKeeper ensemble
            # e.g. host1:2181,host2:2181/chroot
            # Leave empty if not using SolrCloud
            {{solr_cloud_mode_prefix}}ZK_HOST="{{zookeeper_hosts}}{{solr_cloud_zk_directory}}"

            # Set the ZooKeeper client timeout (for SolrCloud mode)
            #ZK_CLIENT_TIMEOUT="15000"

            # By default the start script uses "localhost"; override the hostname here
            # for production SolrCloud environments to control the hostname exposed to cluster state
            SOLR_HOST="{{solr_hostname}}"

            # By default Solr will try to connect to Zookeeper with 30 seconds in timeout; override the timeout if needed
            #SOLR_WAIT_FOR_ZK="30"

            # By default the start script uses UTC; override the timezone if needed
            #SOLR_TIMEZONE="UTC"

            # Set to true to activate the JMX RMI connector to allow remote JMX client applications
            # to monitor the JVM hosting Solr; set to "false" to disable that behavior
            # (false is recommended in production environments)
            #ENABLE_REMOTE_JMX_OPTS="false"

            # The script will use SOLR_PORT+10000 for the RMI_PORT or you can set it here
            # RMI_PORT=18983

            # Anything you add to the SOLR_OPTS variable will be included in the java
            # start command line as-is, in ADDITION to other options. If you specify the
            # -a option on start script, those options will be appended as well. Examples:
            #SOLR_OPTS="$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=3000"
            #SOLR_OPTS="$SOLR_OPTS -Dsolr.autoCommit.maxTime=60000"
            #SOLR_OPTS="$SOLR_OPTS -Dsolr.clustering.enabled=true"

            # Not cloud + kerberos start settings
            {{solr_not_cloud_mode_prefix}}{{solr_kerberos_prefix}}SOLR_OPTS="$SOLR_OPTS \
            {{solr_not_cloud_mode_prefix}}{{solr_kerberos_prefix}}-DauthenticationPlugin=org.apache.solr.security.KerberosPlugin"

            # HDFS start settings
            {{solr_hdfs_prefix}}SOLR_OPTS="$SOLR_OPTS -Dsolr.directoryFactory=HdfsDirectoryFactory \
            {{solr_hdfs_prefix}} -Dsolr.lock.type=hdfs -Dsolr.hdfs.home={{default_fs}}{{solr_hdfs_directory}} \
            {{solr_hdfs_prefix}} -Dsolr.hdfs.confdir={{hadoop_conf_dir}}"

            # Kerberos + HDFS start settings
            {{solr_hdfs_prefix}}{{solr_kerberos_prefix}}SOLR_OPTS="$SOLR_OPTS \
            {{solr_hdfs_prefix}}{{solr_kerberos_prefix}}-Dsolr.hdfs.security.kerberos.enabled=true \
            {{solr_hdfs_prefix}}{{solr_kerberos_prefix}}-Dsolr.hdfs.security.kerberos.keytabfile={{solr_kerberos_keytab}} \
            {{solr_hdfs_prefix}}{{solr_kerberos_prefix}}-Dsolr.hdfs.security.kerberos.principal={{solr_kerberos_principal}}"

            # Location where the bin/solr script will save PID files for running instances
            # If not set, the script will create PID files in $SOLR_TIP/bin
            SOLR_PID_DIR={{solr_config_pid_dir}}

            # Path to a directory for Solr to store cores and their data. By default, Solr will use server/solr
            # If solr.xml is not stored in ZooKeeper, this directory needs to contain solr.xml
            SOLR_HOME={{solr_config_data_dir}}

            # Path to a directory that Solr will use as root for data folders for each core.
            # If not set, defaults to $instance_dir/data. Overridable per core through 'dataDir' core property
            #SOLR_DATA_HOME=

            # Solr provides a default Log4J configuration properties file in server/resources
            # however, you may want to customize the log settings and file appender location
            # so you can point the script to use a different log4j.properties file
            LOG4J_PROPS={{solr_config_conf_dir}}/log4j2.xml

            # Changes the logging level. Valid values: ALL, TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF. Default is INFO
            # This is an alternative to changing the rootLogger in log4j2.xml
            #SOLR_LOG_LEVEL=INFO

            # Location where Solr should write logs to. Absolute or relative to solr start dir
            SOLR_LOGS_DIR={{solr_config_log_dir}}

            # Enables log rotation before starting Solr. Setting SOLR_LOG_PRESTART_ROTATION=true will let Solr take care of pre
            # start rotation of logs. This is false by default as log4j2 handles this for us. If you choose to use another log
            # framework that cannot do startup rotation, you may want to enable this to let Solr rotate logs on startup.
            #SOLR_LOG_PRESTART_ROTATION=false

            # Sets the port Solr binds to, default is 8983
            SOLR_PORT={{solr_config_port}}

            # Enables HTTPS. It is implictly true if you set SOLR_SSL_KEY_STORE. Use this config
            # to enable https module with custom jetty configuration.
            # SOLR_SSL_ENABLED=true
            # Uncomment to set SSL-related system properties
            # Be sure to update the paths to the correct keystore for your environment
            {{solr_ssl_prefix}}SOLR_SSL_KEY_STORE={{ solr_ssl_key_store }}
            {{solr_ssl_prefix}}SOLR_SSL_KEY_STORE_PASSWORD={{ solr_ssl_key_store_password }}
            {{solr_ssl_prefix}}SOLR_SSL_KEY_STORE_TYPE={{solr_ssl_key_store_type}}
            {{solr_ssl_prefix}}SOLR_SSL_TRUST_STORE={{ solr_ssl_trust_store }}
            {{solr_ssl_prefix}}SOLR_SSL_TRUST_STORE_PASSWORD={{ solr_ssl_trust_store_password }}
            {{solr_ssl_prefix}}SOLR_SSL_TRUST_STORE_TYPE={{solr_ssl_trust_store_type}}
            {{solr_ssl_prefix}}SOLR_SSL_NEED_CLIENT_AUTH={{ solr_ssl_need_client_auth }}
            {{solr_ssl_prefix}}SOLR_SSL_WANT_CLIENT_AUTH={{ solr_ssl_want_client_auth }}

            # Uncomment if you want to override previously defined SSL values for HTTP client
            # otherwise keep them commented and the above values will automatically be set for HTTP clients
            #SOLR_SSL_CLIENT_KEY_STORE=
            #SOLR_SSL_CLIENT_KEY_STORE_PASSWORD=
            #SOLR_SSL_CLIENT_KEY_STORE_TYPE=
            #SOLR_SSL_CLIENT_TRUST_STORE=
            #SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD=
            #SOLR_SSL_CLIENT_TRUST_STORE_TYPE=

            # Settings for authentication
            # Please configure only one of SOLR_AUTHENTICATION_CLIENT_CONFIGURER or SOLR_AUTH_TYPE parameters
            {{solr_kerberos_prefix}}SOLR_AUTH_TYPE="kerberos"
            {{solr_kerberos_prefix}}SOLR_AUTHENTICATION_OPTS="-Djava.security.auth.login.config={{solr_kerberos_jaas_config}} \
            {{solr_kerberos_prefix}}-Dsolr.kerberos.cookie.domain={{solr_kerberos_cookie_domain}} \
            {{solr_kerberos_prefix}}-Dsolr.kerberos.cookie.portaware=true \
            {{solr_kerberos_prefix}}-Dsolr.kerberos.principal={{solr_spnego_principal}} \
            {{solr_kerberos_prefix}}-Dsolr.kerberos.keytab={{solr_spnego_keytab}}"

            # Settings for ZK ACL
            #SOLR_ZK_CREDS_AND_ACLS="-DzkACLProvider=org.apache.solr.common.cloud.VMParamsAllAndReadonlyDigestZkACLProvider \
            #  -DzkCredentialsProvider=org.apache.solr.common.cloud.VMParamsSingleSetCredentialsDigestZkCredentialsProvider \
            #  -DzkDigestUsername=admin-user -DzkDigestPassword=CHANGEME-ADMIN-PASSWORD \
            #  -DzkDigestReadonlyUsername=readonly-user -DzkDigestReadonlyPassword=CHANGEME-READONLY-PASSWORD"
            #SOLR_OPTS="$SOLR_OPTS $SOLR_ZK_CREDS_AND_ACLS"

            # Different limits can be set in solr.in.sh or your profile if you prefer as well.
            #SOLR_RECOMMENDED_OPEN_FILES=
            #SOLR_RECOMMENDED_MAX_PROCESSES=
            #SOLR_ULIMIT_CHECKS=
        </value>
        <value-attributes>
            <type>content</type>
        </value-attributes>
    </property>


    <property>
        <name>solr_xml_template</name>
        <display-name>solr.xml template</display-name>
        <description>This is a template for the solr.xml file</description>
        <value/>
        <property-type>VALUE_FROM_PROPERTY_FILE</property-type>
        <value-attributes>
          <property-file-name>solr.xml.j2</property-file-name>
          <property-file-type>xml</property-file-type>
        </value-attributes>
    </property>
</configuration>
